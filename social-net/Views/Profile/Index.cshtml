@using Microsoft.AspNetCore.Identity
@model social_net.Models.User
@{
}

@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager


@{
    var currentUser = SignInManager.IsSignedIn(User) ? await UserManager.GetUserAsync(User) : null;
    bool isOwnProfile = currentUser != null && currentUser == Model;
    // bool isFriend = Model.AllFriendships.Any(fr => fr.InitiatorUserId == currentUser.Id || fr.RecipientUserId == currentUser.Id);
    bool isFriend = currentUser != null && Model.Friends.Contains(currentUser);
    bool canViewPosts = isOwnProfile || User.IsInRole("Admin") || Model.HasPublicProfile || isFriend;

    var posts = new List<ViewPostModel>();
    if (canViewPosts)
    {
        posts.AddRange(Model.TextPosts.Select(tp => new ViewPostModel { Type = "Text", TextPost = tp, PostedAt = tp.PostedAt }));
        posts.AddRange(Model.PhotoAlbums.Select(pa => new ViewPostModel { Type = "Photo", PhotoAlbum = pa, PostedAt = pa.PostedAt }));
        posts = posts.OrderByDescending(p => p.PostedAt).ToList();
    }
}

<div class="container mt-4">
    <div class="card shadow-sm p-4">
        <div class="d-flex justify-content-between align-items-center">
            <h1 class="mb-0">@Model.FirstName @Model.LastName</h1>

            <div class="d-flex gap-2 ms-auto">
                @if (isOwnProfile)
                {
                    <a class="btn btn-outline-primary btn-sm" asp-area="Identity" asp-page="/Account/Manage/Index">
                        <i class="bi bi-pencil-fill"></i> Edit Profile
                    </a>
                }
                else if (SignInManager.IsSignedIn(User))
                {
                    @if (isFriend)
                    {
                        <a class="btn btn-primary btn-sm" asp-action="MessageBox" asp-route-profileUserId="@Model.Id">
                            <i class="bi bi-chat-dots-fill"></i> Message
                        </a>
                        <form asp-action="RemoveFriend" asp-route-profileUserId="@Model.Id" asp-route-currentUserId="@currentUser.Id" method="post">
                            <button type="submit" class="btn btn-outline-danger btn-sm">Remove Friend</button>
                        </form>
                    }
                    else if (Model.ReceivedFriendRequests.Any(fr => fr.SenderId == currentUser.Id))
                    {
                        <p class="text-muted">Friend request sent</p>
                    }
                    else if (Model.SentFriendRequests.Any(fr => fr.ReceiverId == currentUser.Id))
                    {
                        <form asp-action="AcceptFriend" asp-route-profileUserId="@Model.Id" asp-route-currentUserId="@currentUser.Id" method="post">
                            <button type="submit" class="btn btn-success btn-sm">Accept Friend</button>
                        </form>
                        <form asp-action="DeclineFriend" asp-route-profileUserId="@Model.Id" asp-route-currentUserId="@currentUser.Id" method="post">
                            <button type="submit" class="btn btn-outline-danger btn-sm">Decline Friend</button>
                        </form>
                    }
                    else
                    {
                        <form asp-action="AddFriend" asp-route-profileUserId="@Model.Id" asp-route-currentUserId="@currentUser.Id" method="post">
                            <button type="submit" class="btn btn-primary btn-sm">
                                <i class="bi bi-person-plus-fill"></i> Add Friend
                            </button>
                        </form>
                    }
                }
            </div>
        </div>
    </div>
</div>


@if(isOwnProfile)
{
    <partial name="_CreatePartial" model="currentUser" />
}


@if(canViewPosts)
{
    @if(!SignInManager.IsSignedIn(User))
    {
        <div class="container mt-4">
            <div class="card shadow-sm p-4 mt-4 text-center">
                <p>Register or login to connect.</p>
                <a class="btn btn-primary text-light w-100 mt-2" asp-area="Identity" asp-page="/Account/Register">Register</a>
                <a class="btn btn-secondary text-light w-100 mt-2" asp-area="Identity" asp-page="/Account/Login">Login</a>
            </div>
        </div>
    }
    @if(posts.Count == 0)
    {
        <div class="container mt-4">
            <div class="card shadow-sm p-4 mt-4 text-center">
                @if(isOwnProfile)
                {
                    <h5 class="text-muted">You don't have any posts</h5>
                } else {
                    <h5 class="text-muted">@Model.FirstName has no posts</h5>
                }
            </div>
        </div>
    } else
    {
        <div class="container mt-4">
            <div class="card shadow-sm p-4">
                <h3>Posts</h3>
            </div>
        </div>
        foreach (var post in posts)
        {
            <partial name="_PostsPartial" model="post" />
        }
    }
}
else if (SignInManager.IsSignedIn(User) && !Model.HasPublicProfile)
{
    <div class="container mt-4">
        <div class="card shadow-sm p-4 mt-4 text-center">
            <h5 class="text-muted">@Model.FirstName has a private profile</h5>
        </div>
    </div>
}
else if (!SignInManager.IsSignedIn(User) && !Model.HasPublicProfile)
{
	<div class="container mt-4">
		<div class="card shadow-sm p-4 mt-4 text-center">
			<h5 class="text-muted">@Model.FirstName has a private profile</h5>
			<p>Register or login to connect.</p>
			<a class="btn btn-primary text-light w-100 mt-2" asp-area="Identity" asp-page="/Account/Register">Register</a>
			<a class="btn btn-secondary text-light w-100 mt-2" asp-area="Identity" asp-page="/Account/Login">Login</a>
		</div>
	</div>
}