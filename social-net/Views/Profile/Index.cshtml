@using Microsoft.AspNetCore.Identity
@model social_net.Models.User
@{
}

@inject UserManager<User> UserManager

@{
	var currentUser = await UserManager.GetUserAsync(User);
}

<h1>@Model.FirstName @Model.LastName</h1>

@if (currentUser == Model)
{
	<a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Edit Account</a>
	<h3>Create post</h3>
	<form asp-action="CreatePost" asp-route-currentUserId="@currentUser.Id" method="post">
		<div class="form-floating mb-3">
			<input class="form-control" name="textContent" autocomplete="off" />
			<label>What's on your mind, @currentUser.FirstName?</label>
		</div>
	</form>

	<h3>Create album</h3>
	<form asp-action="CreateAlbum" asp-route-currentUserId="@currentUser.Id" method="post" enctype="multipart/form-data">
		<input type="file" name="photos" class="form-control" multiple />
		<button type="submit" class="btn btn-primary">Create Album</button>
	</form>

}
else if (currentUser != null)
{
	/*
	Console.WriteLine("profileUser.ReceivedFriendRequests = ");
	foreach (var friendRequest in @Model.ReceivedFriendRequests)
	{
		Console.WriteLine("ID = " + friendRequest.ReceiverId);
		}
	*/
	if (Model.AllFriendships.Any(fr => fr.InitiatorUserId == currentUser.Id || fr.RecipientUserId == currentUser.Id))
	{
		<p> You are friends! </p>
		@* <button class="btn btn-primary" asp-controller="Message" asp-action="Index" asp-route-profileUserId="@Model.Id">Message</button> *@
		<a class="btn btn-primary" asp-action="MessageBox" asp-route-profileUserId="@Model.Id">Message</a>
	}
	else
	{
		if (Model.ReceivedFriendRequests.Any(fr => fr.SenderId == currentUser.Id))
		{
			<p> Ai trimis o cerere de prietenie acestui utilizator. </p>
		}
		else if (Model.SentFriendRequests.Any(fr => fr.ReceiverId == currentUser.Id))
		{
			@* <p> Ai primit o cerere de prietenie de la acest utilizator. </p> *@

			<form asp-action="AcceptFriend" asp-route-profileUserId="@Model.Id" asp-route-currentUserId="@currentUser.Id" method="post">
				<button type="submit" class="btn btn-primary">Accept Friend</button>
			</form>

			<form asp-action="DeclineFriend" asp-route-profileUserId="@Model.Id" asp-route-currentUserId="@currentUser.Id" method="post">
				<button type="submit" class="btn btn-primary">Decline Friend</button>
			</form>
		}
		else
		{
			<form asp-action="AddFriend" asp-route-profileUserId="@Model.Id" asp-route-currentUserId="@currentUser.Id" method="post">
				<button type="submit" class="btn btn-primary">Add Friend</button>
			</form>
		}
	}



}

@if (currentUser == Model || Model.HasPublicProfile || Model.Friends.Contains(currentUser))
{
	<h3>Posts</h3>
	@foreach (var textPost in Model.TextPosts)
	{
		<div style="border: 1px solid black; margin-bottom: 25px; padding: 10px; border-radius: 10px">
			<h4>@Model.FirstName @Model.LastName</h4>
			<p>@textPost.PostedAt</p>
			<p>@textPost.Text</p>
		</div>
	}

	<h3>Albums</h3>
	@foreach (var photoAlbum in Model.PhotoAlbums)
	{
		<h5>Album created on @photoAlbum.PostedAt</h5>
		@foreach (var photo in photoAlbum.Photos)
		{
			<a asp-controller="Photo" asp-action="Index" asp-route-photoId="@photo.Id"><img src="@photo.ImagePath" alt="Photo" style="width: 150px; height: 150px; margin: 5px;" /></a>
			<br />
		}
		<br />
}

}