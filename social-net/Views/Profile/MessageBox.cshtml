@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@using social_net.Data
@model social_net.Models.User
@{
}

@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@inject social_net.Data.AppDbContext _appDbContext;


@if (SignInManager.IsSignedIn(User))
{
    <h3> Conversation with @Model.FirstName @Model.LastName </h3>

    var currentUser = await UserManager.GetUserAsync(User);
    currentUser = await _appDbContext.Users
        .Include(u => u.SentMessages)
        .FirstOrDefaultAsync(u => u.Id.Equals(currentUser.Id));

    if (currentUser != Model)
    {
        <section id="messageContainer">
            @{
                var messagesToProfileUser = currentUser.SentMessages.FindAll(msg => msg.ReceiverId == Model.Id).ToList();
                var messagesFromProfileUser = Model.SentMessages.FindAll(msg => msg.ReceiverId == currentUser.Id).ToList();
                var allMessages = messagesToProfileUser.Concat(messagesFromProfileUser).ToList();
                allMessages.Sort((msg1, msg2) => msg1.SentAt.CompareTo(msg2.SentAt));
            }
            <partial name="_MessagePartial" model="allMessages" />
        </section>

        <form asp-action="SendMessage" asp-route-currentUserId="@currentUser.Id" asp-route-profileUserId="@Model.Id" method="post">
            <div id="bottom" class="form-floating mb-3">
                <input class="form-control" name="messageContent" autocomplete="off" />
                <label>Press Enter to send a new message to @Model.FirstName @Model.LastName </label>
            </div>
        </form>
    } else
    {
        <h5> You cannot chat with yourself! </h5>
    }
}


<style>
    html {
        scroll-behavior: auto !important;
    }
</style>

<script>
    window.onload = () => {
        const el = document.getElementById("bottom");
        if (el) el.scrollIntoView({ behavior: "auto" });
    };
</script>