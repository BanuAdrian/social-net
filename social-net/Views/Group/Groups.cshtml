@using Microsoft.AspNetCore.Identity
@model List<social_net.Models.Group>

@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

<a class="btn btn-primary text-light mb-3" asp-area="" asp-controller="Group" asp-action="CreateGroup"><i class="bi bi-plus-lg"></i> Create new group</a>

@foreach (var group in Model)
{
    @* <h1> Group Id: @group.Id </h1> *@
    <div class="post-container">
        <span class="h5"><a class="text-dark" asp-controller="Group" asp-action="Index" asp-route-groupId="@group.Id">@group.Name </a></span>
        <span>• group • @((@group.Members.Count == 1) ? "1 member" : $"{@group.Members.Count} members")</span>

        <ul class="list-group mb-3 mt-3">
            @foreach (var member in group.Members)
            {
                <li class="list-group-item"> <a asp-controller="Profile" asp-action="Index" asp-route-profileUserId="@member.Id">@member.FirstName @member.LastName</a></li>

            }
        </ul>
        @*     @foreach (var member in group.Members) *@
        @*     { *@
        @*         // de adaugat JoinedAt in Group pt a pastra ordinea *@
        @*         <ul> *@
        @*             <li> @member.FirstName @member.LastName </li> *@
        @*         </ul> *@
        @*     } *@
        @if (SignInManager.IsSignedIn(User))
        {
            var currentUser = await UserManager.GetUserAsync(User);
            @if (currentUser.Groups.Contains(group))
            {
                @* <h2> You are a member of this group </h2> *@
                <a class="btn btn-primary" asp-action="MessageBox" asp-route-groupId="@group.Id">Message</a>

            }
            else
            {
                <form asp-action="JoinGroup" asp-route-currentUserId="@currentUser.Id" asp-route-groupId="@group.Id" method="post">
                    <button type="submit" class="btn btn-primary">Join Group</button>
                </form>
            }
        }
    </div>
    @* <hr /> *@
}
